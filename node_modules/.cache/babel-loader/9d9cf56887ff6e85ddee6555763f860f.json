{"ast":null,"code":"import _toConsumableArray from\"C:/Users/isokids/Desktop/test/bandienthoai/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import*as types from'./../constants/ActionTypes';// var data= JSON.parse(localStorage.getItem(\"Products\"));\n// var initialState =data ?  data : [];\nvar initialState=[{ID:11100,Price:1000,Name:'Mi 4x',Brand:'Xiaomi'},{ID:1,Price:10200,Name:'samsung s2',Brand:'SamSung'},{ID:2,Price:10300,Name:'Iphone Tàu',Brand:'Iphone'},{ID:3,Price:10040,Name:'s4',Brand:'LG'}];var findIndex=function findIndex(Products,id){var result=-1;Products.forEach(function(value,index){if(value.ID==id)result=index;});return result;};var randomID=function randomID(){// Math.random should be unique because of its seeding algorithm.\n// Convert it to base 36 (numbers + letters), and grab the first 9 characters\n// after the decimal.\nreturn'_'+Math.random().toString(36).substr(2,9);};var myReducer=function myReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case types.LIST_ALL:return state;case types.Add_Product:var id=action.ID;var index=findIndex(state,id);var newProduct={ID:randomID(),Price:action.Product.Price,Name:action.Product.Name,Brand:action.Product.Brand};state.push(newProduct);// localStorage.setItem('Products', JSON.stringify(state))\nreturn _toConsumableArray(state);case types.Delete_Product:if(index!==-1){state.splice(index,1);}return _toConsumableArray(state);case types.Edit_Product:var ID=action.Product.ID;var Index=findIndex(_toConsumableArray(state),ID);if(Index!==-1){state[Index]=action.Product;}return _toConsumableArray(state);default:return state;}};export default myReducer;","map":{"version":3,"sources":["C:/Users/isokids/Desktop/test/bandienthoai/src/reducers/Products.js"],"names":["types","initialState","ID","Price","Name","Brand","findIndex","Products","id","result","forEach","value","index","randomID","Math","random","toString","substr","myReducer","state","action","type","LIST_ALL","Add_Product","newProduct","Product","push","Delete_Product","splice","Edit_Product","Index"],"mappings":"yKAAA,MAAO,GAAMA,CAAAA,KAAb,KAAwB,4BAAxB,CACA;AACA;AACA,GAAIC,CAAAA,YAAY,CAAG,CACX,CAAEC,EAAE,CAAE,KAAN,CAAaC,KAAK,CAAE,IAApB,CAA0BC,IAAI,CAAE,OAAhC,CAAyCC,KAAK,CAAE,QAAhD,CADW,CAEX,CAAEH,EAAE,CAAE,CAAN,CAASC,KAAK,CAAE,KAAhB,CAAuBC,IAAI,CAAE,YAA7B,CAA2CC,KAAK,CAAE,SAAlD,CAFW,CAGX,CAAEH,EAAE,CAAE,CAAN,CAASC,KAAK,CAAE,KAAhB,CAAuBC,IAAI,CAAE,YAA7B,CAA2CC,KAAK,CAAE,QAAlD,CAHW,CAIX,CAAEH,EAAE,CAAE,CAAN,CAASC,KAAK,CAAE,KAAhB,CAAuBC,IAAI,CAAE,IAA7B,CAAmCC,KAAK,CAAE,IAA1C,CAJW,CAAnB,CAMA,GAAIC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,QAAD,CAAWC,EAAX,CAAkB,CAC1B,GAAIC,CAAAA,MAAM,CAAG,CAAC,CAAd,CACAF,QAAQ,CAACG,OAAT,CAAiB,SAACC,KAAD,CAAQC,KAAR,CAAkB,CAC3B,GAAID,KAAK,CAACT,EAAN,EAAYM,EAAhB,CACQC,MAAM,CAAGG,KAAT,CACf,CAHD,EAKA,MAAOH,CAAAA,MAAP,CACP,CARD,CASA,GAAII,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAY,CACnB;AACA;AACA;AACA,MAAO,IAAMC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,MAA3B,CAAkC,CAAlC,CAAqC,CAArC,CAAb,CACP,CALD,CAMA,GAAIC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBlB,YAAyB,IAAXmB,CAAAA,MAAW,2CAG1C,OAAQA,MAAM,CAACC,IAAf,EACQ,IAAKrB,CAAAA,KAAK,CAACsB,QAAX,CACQ,MAAOH,CAAAA,KAAP,CACR,IAAKnB,CAAAA,KAAK,CAACuB,WAAX,CACQ,GAAIf,CAAAA,EAAE,CAAGY,MAAM,CAAClB,EAAhB,CACA,GAAIU,CAAAA,KAAK,CAAGN,SAAS,CAACa,KAAD,CAAQX,EAAR,CAArB,CACA,GAAIgB,CAAAA,UAAU,CAAG,CACTtB,EAAE,CAAEW,QAAQ,EADH,CAETV,KAAK,CAAEiB,MAAM,CAACK,OAAP,CAAetB,KAFb,CAGTC,IAAI,CAAEgB,MAAM,CAACK,OAAP,CAAerB,IAHZ,CAITC,KAAK,CAAEe,MAAM,CAACK,OAAP,CAAepB,KAJb,CAAjB,CAMAc,KAAK,CAACO,IAAN,CAAWF,UAAX,EACA;AACA,0BAAWL,KAAX,EACR,IAAKnB,CAAAA,KAAK,CAAC2B,cAAX,CACQ,GAAIf,KAAK,GAAK,CAAC,CAAf,CAAkB,CACVO,KAAK,CAACS,MAAN,CAAahB,KAAb,CAAoB,CAApB,EACP,CACD,0BAAWO,KAAX,EACR,IAAKnB,CAAAA,KAAK,CAAC6B,YAAX,CACQ,GAAI3B,CAAAA,EAAE,CAAGkB,MAAM,CAACK,OAAP,CAAevB,EAAxB,CACA,GAAI4B,CAAAA,KAAK,CAAGxB,SAAS,oBAAKa,KAAL,EAAajB,EAAb,CAArB,CACA,GAAI4B,KAAK,GAAK,CAAC,CAAf,CAAkB,CACVX,KAAK,CAACW,KAAD,CAAL,CAAeV,MAAM,CAACK,OAAtB,CACP,CACD,0BAAWN,KAAX,EACR,QAAS,MAAOA,CAAAA,KAAP,CA3BjB,CA8BP,CAjCD,CAkCA,cAAeD,CAAAA,SAAf","sourcesContent":["import *  as types from './../constants/ActionTypes';\r\n// var data= JSON.parse(localStorage.getItem(\"Products\"));\r\n// var initialState =data ?  data : [];\r\nvar initialState = [\r\n        { ID: 11100, Price: 1000, Name: 'Mi 4x', Brand: 'Xiaomi' },\r\n        { ID: 1, Price: 10200, Name: 'samsung s2', Brand: 'SamSung' },\r\n        { ID: 2, Price: 10300, Name: 'Iphone Tàu', Brand: 'Iphone' },\r\n        { ID: 3, Price: 10040, Name: 's4', Brand: 'LG' }\r\n];\r\nvar findIndex = (Products, id) => {\r\n        var result = -1;\r\n        Products.forEach((value, index) => {\r\n                if (value.ID == id)\r\n                        result = index;\r\n        });\r\n        \r\n        return result;\r\n}\r\nvar randomID = function () {\r\n        // Math.random should be unique because of its seeding algorithm.\r\n        // Convert it to base 36 (numbers + letters), and grab the first 9 characters\r\n        // after the decimal.\r\n        return '_' + Math.random().toString(36).substr(2, 9);\r\n};\r\nvar myReducer = (state = initialState, action) => {\r\n\r\n\r\n        switch (action.type) {\r\n                case types.LIST_ALL:\r\n                        return state;\r\n                case types.Add_Product:\r\n                        var id = action.ID;\r\n                        var index = findIndex(state, id);\r\n                        var newProduct = {\r\n                                ID: randomID(),\r\n                                Price: action.Product.Price,\r\n                                Name: action.Product.Name,\r\n                                Brand: action.Product.Brand\r\n                        }\r\n                        state.push(newProduct);\r\n                        // localStorage.setItem('Products', JSON.stringify(state))\r\n                        return [...state];\r\n                case types.Delete_Product:\r\n                        if (index !== -1) {\r\n                                state.splice(index, 1)\r\n                        }\r\n                        return [...state];\r\n                case types.Edit_Product:\r\n                        var ID = action.Product.ID;\r\n                        var Index = findIndex([...state], ID);\r\n                        if (Index !== -1) {\r\n                                state[Index] = action.Product;\r\n                        }\r\n                        return [...state];\r\n                default: return state;\r\n\r\n        }\r\n};\r\nexport default myReducer;"]},"metadata":{},"sourceType":"module"}